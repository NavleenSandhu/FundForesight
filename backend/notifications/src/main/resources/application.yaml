server:
    port: ${PORT}
spring:
    application:
        name: notifications
    datasource:
        url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
        username: ${DB_USERNAME}
        password: ${DB_PASSWORD}
    jpa:
        hibernate:
            ddl-auto: update
        properties:
            hibernate:
                dialect: org.hibernate.dialect.PostgreSQLDialect
    kafka:
        bootstrap-servers: ${KAFKA_URL}
        consumer:
            group-id: notifications
            auto-offset-reset: earliest
            key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
            value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
            properties:
                spring:
                    json:
                        trusted:
                            packages: '*'
        properties:
            session.timeout.ms: 30000
transactions:
    api:
        url: ${TRANSACTIONS_URL}
budgets:
    api:
        url: ${BUDGETS_URL}